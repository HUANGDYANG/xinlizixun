<script>
import wepy from 'wepy';
import 'wepy-async-function';


var xbossdebug = require('./utils/xbossdebug.js') // 引用xbossdebug
xbossdebug.config.key = 'wx74c19196a514a67f' // key为自定义唯一值，用于后端记录时区分应用
xbossdebug.config.url = 'https://miniprogram.careyourfeeling.cn/log/save'; // 上报服务端地址
// 可选参数
xbossdebug.config.setSystemInfo = true; // 获取系统信息
xbossdebug.config.setLocation = true; // 获取用户位置信息

import { setStore } from 'wepy-redux';
import configStore from './store';
import {
  requestConfig,
  baseUrl,
  isDebug,
  $post,
  $get,
  default as api
} from './api.js';
import ENVIRONMENT_CONFIG from './config/envConfig.js'; // 配置
import IMController from './controller/im.js';

const store = configStore();
setStore(store);

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index', // 主页

      'pages/collection_information', // 信息收集

      'pages/questionnaire', // 问卷调查

      'pages/login', // 登录页 手机绑定

      'pages/data_fill',
      'pages/my_message', // 我的消息

      'pages/test_result',

      'pages/pie/index',
      'pages/custom_detail', // 定制详情
      'pages/custom_edit', // 定制详情

      // 友陪伴
      'pages/friend_form', // 定制服务
      'pages/friend_acc', // 友陪伴

      // 咨询列表
      'pages/consult_list',
      'pages/click_evaluate',
      'pages/see_evaluation',
      'pages/history_evaluate',
      'pages/evaluation_results',

      // 排班管理
      'pages/scheduling_arrange',
      'pages/scheduling_modify',
      'pages/scheduling',

      // 个人中心
      'pages/person_center',

      // 走心聊 tab
      'pages/be_mindful', // 列表页
      'pages/order', // 预约
      'pages/line_detail', // 资料填写
      'pages/be_mindful_screen', // 筛选页
      'pages/be_mindful_search',

      // 测评 心自知 tab
      'pages/test_detail', // 测评 选择题
      'pages/heart_know',
      'pages/heart_know_detail', // 测评 详情

      // 课程 知新话 tab
      'pages/confidences',
      'pages/confidences_detail',
      'pages/confidences_detail_detail',

      'pages/wxInfo', // 授权页 登录

      // 新速递
      'pages/heart_exp',
      'pages/heart_exp_detail', // 新速递

      // 咨询师消费 我的钱包
      'pages/my_wallet',
      'pages/deposit', // 提现页面

      'pages/evaluate', // 评价资讯师
      'pages/my_make', // 我的咨询
      'pages/my_test', // 我的测评
      'pages/my_evaluate', // 我的评价

      'pages/collect', // 收藏

      'pages/rec_com', // 收到评论
      'pages/see_com', // 查看评论
      'pages/make_detail', // 预约详情

      'pages/inter_notice',
      'pages/inter_protocol',
      'pages/account_message',

      'pages/contact', // 联系我们
      'pages/provide', // 友优惠

      'pages/chioce_city', // 选择城市的
      'pages/agreement',
      'pages/be_mindful_detail', // 咨询师详情
      'pages/consult', // 实时咨询

      'pages/cropper/cropper', // 截图功能

      'pages/citys/citys', //
      'pages/address_map', // 地图显示
      // "pages/room/room" // 地图显示

      'pages/videoCall/videoCall'
      // 'pages/counselorCallc/counselorCallc'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black',
      enablePullDownRefresh: false
    },
    tabBar: {
      color: '#999999',
      selectedColor: '#2565C3',
      backgroundColor: '#fff',
      borderStyle: 'white',
      list: [
        {
          pagePath: 'pages/index',
          selectedIconPath: '/images/icon_shouye_click@2x.png',
          iconPath: '/images/icon_shouye_default@2x.png',
          text: '首页'
        },
        {
          pagePath: 'pages/be_mindful',
          selectedIconPath: '/images/icon_liao_click@2x.png',
          iconPath: '/images/icon_liao_default@2x.png',
          text: '走心聊'
        },
        {
          pagePath: 'pages/confidences',
          selectedIconPath: '/images/icon_zhixinhua_click@2x.png',
          iconPath: '/images/icon_zhixinhua_default@2x.png',
          text: '知新话'
        },
        {
          pagePath: 'pages/heart_know',
          selectedIconPath: '/images/icon_xinzizhi_click@2x.png',
          iconPath: '/images/icon_xinzizhi_default@2x.png',
          text: '心自知'
        },
        {
          pagePath: 'pages/person_center',
          selectedIconPath: '/images/icon_geren_click@2x.png',
          iconPath: '/images/icon_geren_default@2x.png',
          text: '个人中心'
        }
      ]
    },
    permission: {
      'scope.userLocation': {
        desc: '用于获取你的地理位置'
      }
    }
  };

  globalData = {
    userInfo: '',
    contactusInfo: '',
    netcall: null,
    emitter: null,
    netcallController: null,
    ENVIRONMENT_CONFIG, // 配置
    nim: null,
    compareClientVersion: true,
    videoContainerSize:'',
    isPushBeCallPage:'',
  };

  constructor() {
    super();
    this.use('requestfix');
    this.use('promisify');
    this.intercept('request', requestConfig);
  }

  onLaunch() {
    wx.removeStorageSync('firstComein'); // 判断是否打开
    this.compareClientVersion();
    wx.setKeepScreenOn({
      keepScreenOn: true
    });
    let systemInfo = wx.getSystemInfoSync();
    this.globalData.videoContainerSize = {
      width: systemInfo.windowWidth,
      height: systemInfo.windowHeight
    };
    this.globalData.isPushBeCallPage = false;
    // 测试token
    // this.testAsync()

    // 设置 InnerAudioContext 的播放选项。设置之后对当前小程序全局生效。
    // wx.setInnerAudioOption({
    //   obeyMuteSwitch: false
    // });
    let { getMemberInfo, searchMemberCustomizationInfo, getMemberImInfo } = api;
    // wx.setStorageSync('token', '399380ff8ea6f293a195c462958cc8cf')

    // 获取用户信息
    wx.getSetting({
      success: res => {
        if (res.authSetting['scope.userInfo']) {
          // 判断有没有授权 有授权的话设置用户信息  需求不用小程序那边的用户数据
          if (wx.getStorageSync('token')) {
            // 发送请求
            getMemberInfo().then(res => {
              this.globalData.userInfo = res.data;
              // this.globalData.userInfo.memberType = 0
              // 0普通用户,1申请咨询师,2咨询师
              // this.globalData.userInfo.memberType = 2 // 先模拟

              if (this.userInfoReadyCallback) {
                this.userInfoReadyCallback(res);
              }


              // 获取并做注册
              getMemberImInfo().then(res => {
                if (res) {
                  new IMController({
                    // 实时通讯
                    // token: this.data.password,
                    // account: this.data.account
                    account: res.data.accid,
                    token: res.data.token
                  });
                }
              });
            });
          }
        } else {
          // 没有授权 去授权页面
          wx.redirectTo({
            url: '/pages/wxInfo'
          });
        }
      }
    });

    let { getContactusInfo } = api;
    getContactusInfo().then(res => {
      console.log(res, '联系我们 onLaunch');
      this.globalData.contactusInfo = res.data;
    });
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved');
      }, s * 1000);
    });
  }
  onShow() {
    let { getMemberInfo } = api;
    if (wx.getStorageSync('token')) {
      getMemberInfo();
    }
    // 屏幕常亮
    wx.setKeepScreenOn({
      keepScreenOn: true
    });
  }
  onHide() {
    let { consultantOffline } = api;
    if (wx.getStorageSync('token')) {
      consultantOffline();
    }
  }
  async testAsync() {
    const data = await this.sleep(3);
    console.log(data);
  }

  compareClientVersion() {
    function compareVersion(v1, v2) {
      v1 = v1.split('.');
      v2 = v2.split('.');
      const len = Math.max(v1.length, v2.length);

      while (v1.length < len) {
        v1.push('0');
      }
      while (v2.length < len) {
        v2.push('0');
      }

      for (let i = 0; i < len; i++) {
        const num1 = parseInt(v1[i]);
        const num2 = parseInt(v2[i]);

        if (num1 > num2) {
          return 1;
        } else if (num1 < num2) {
          return -1;
        }
      }

      return 0;
    }

    wepy.getSystemInfo().then(res => {
      compareVersion(res.version, '7.0.0');
      if (compareVersion(res.version, '7.0.0') >= 0) {
        this.globalData.compareClientVersion = true;
      } else {
        this.globalData.compareClientVersion = false;
      }
    });
  }
  getUserInfo(cb) {
    const that = this;
    if (this.globalData.userInfo) {
      return this.globalData.userInfo;
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo;
        cb && cb(res.userInfo);
      }
    });
  }
}
</script>

<style lang="less">
@import './base.less';
</style>

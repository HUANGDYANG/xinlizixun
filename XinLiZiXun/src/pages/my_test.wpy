<template>
  <view class="container">
    <repeat for="{{evaluationList}}"
            key="{{item.id}}">
      <view class='this'
            @tap.stop="toDetails({{item.id}})">
        <view class='time_out'>{{item.updateTime}}</view>
        <view class='pd30'>
          <view class='flex flex-a-i-center flex-j-c-sb pd30_'>
            <view class='flex1'>
              <view class='title1 ellipsis2'>{{item. shortTitle}}</view>
              <view class='title2 ellipsis2'>{{item.title}}</view>
            </view>
            <image src="{{item.mainPic}}"
                   class='backe5'
                   mode="aspectFill"></image>
          </view>
        </view>
        <view class='again disable'
              wx:if="{{item.evaluationType == 1}}">再测一遍</view>
        <view class='again'
              wx:else
              @tap.top="testAgain({{item.evaluationId}})">再测一遍</view>
      </view>
    </repeat>
    <view class='no_more'
          wx:if='{{loaded}}'>- 没有更多啦 -</view>
  </view>
</template>
<script>
import wepy from 'wepy'
import { goPath, checkInfo } from '../util.js'
import api from '../api.js'
export default class My_test extends wepy.page {
  config = {
    navigationBarTitleText: '我的测评'
  };

  components = {};

  data = {
    evaluationList: [],
    nextPage: 1, // 下一页
    loaded: false
  };

  computed = {};

  methods = {
    toDetails(id) {
      goPath('/pages/test_result?id=' + id + '&type=1')
    },
    testAgain(id) {
      goPath('/pages/heart_know_detail?id=' + id)
    }
  };
  events = {};

  async onLoad(option) {
    this.getMemberEvaluationList()
  }

  getMemberEvaluationList({ pageNum = 1, pageSize = 10 } = {}) {
    let { getMemberEvaluationList } = api
    getMemberEvaluationList({ pageNum: pageNum, pageSize: pageSize }).then(
      res => {

        if (res) {
          if (this.nextPage == 1) {
            if (res.data.nextPage == 0) {
              this.loaded = true
            } else {
              this.nextPage = res.data.nextPage
            }
            this.evaluationList = res.data.list
          } else if (this.nextPage > 1) {
            this.nextPage = res.data.nextPage
            if (res.data.nextPage == 0) this.loaded = true
            this.evaluationList.push(...res.data.list)
          }
          this.$apply()
        }
      }
    )
  }
  onReachBottom() {
    if (!this.loaded) {
      this.getMemberEvaluationList({
        pageNum: this.nextPage
      })
    }
  }
}
</script>
<style lang="less">
.container {
  padding: 47rpx 0;
}
.this {
  background-color: #fff;
  background: rgba(255, 255, 255, 1);
  /*  border:1rpx solid rgba(238,238,238,1);*/
  border-radius: 24rpx;
  width: 686rpx;
  margin: 0 auto 26rpx;
}
.time_out {
  font-size: 26rpx;
  font-family: PingFang-SC-Regular;
  font-weight: 400;
  color: rgba(51, 51, 51, 1);
  padding: 20rpx 30rpx;
  border-bottom: 1rpx solid rgba(238, 238, 238, 1);
}
.pd30 {
  padding: 30rpx 0;
  border-bottom: 1rpx solid rgba(238, 238, 238, 1);
}
.pd30_ {
  padding: 0 30rpx;
}
.backe5 {
  width: 160rpx;
  height: 160rpx;
  margin-left: 38rpx;
}
.flex1 {
  flex: 1;
}
.title1 {
  font-size: 30rpx;
  font-family: PingFang-SC-Bold;
  font-weight: bold;
  color: rgba(51, 51, 51, 1);
  line-height: 46rpx;
}
.title2 {
  font-size: 24rpx;
  font-family: PingFang-SC-Regular;
  font-weight: 400;
  color: rgba(153, 153, 153, 1);
  line-height: 36rpx;
}
.again {
  font-size: 30rpx;
  font-family: PingFang-SC-Medium;
  font-weight: 500;
  color: rgba(37, 101, 195, 1);
  text-align: center;
  padding: 24rpx 0;
  &.disable {
    color: rgba(153, 153, 153, 1);
  }
}
</style>
